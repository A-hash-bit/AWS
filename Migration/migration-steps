* Preparation for Migration
- Steps:
  1. Preparation - Lets say you are working with 200 microservices, or if you have monolithic app then first it needs to be converted in microservice.
  2. Planning - Divide services into phases, decide which services will migrate in initial phase and later. Noncritical goes first, critical after that. & which migration strategies
  3. Migrate - actual migration, will use terraform, ansible for infra, shell/cron jobs etc

  4. Monitor - monitor each phase for 1-2 months, then go with second phase.
  5. Optimise

* Migration Strategies
1. Rehost - Lift and shift (u have k8s on data center now u will create same infra on cloud and move apps there), Works if app are independant of underlying infra. 
2. Replatform - you will try to use cloud features (RDS, EKS) for scaliablity, high availability    
3. Refactore/Rearchitecture  - will go for best/new tools from cloud and open source
4. Repurchase - purchase same services
5. Relocate - you were using k8s on prem now moved to EKS.(can be costly)
6. Retire - 
7. Retain - Keeps some on old infra(Banking secure apps). move some apps.



===============================================================================================================================================================
* There are 2 type of migration Cold & live , Cold when VM is stopped, Live when VM is running.
# 1 - VM migration (from private data center)
Steps - 1. Create/Get VMDK file (Its a kind of backup file of VM)
        2. Create an S3 bucket. & upload the vmdk file to s3.
        3. Create a IAM Role(named -"vmimport") for EC2 with permission of (VM import export full access) and edit trust relationship to "vmie" instead of "ec2"
            - (so that it can convert the vmdk to AMI)  - need to give ec2 and s3 full access but if import cmd don't work May need to give admin access
        4. configure the AWS user (install AWS cli if not) where the VM is. 
        5. Create a json file on the system where the VM is. (containers.json)
        [{
          "Description": "<migration>",
          "Format": "vmdk",
          "UserBucket"{
              "S3Bucket": "<bucket name>",
              "S3Key": "<object-name-in-bucket>"
          }}]
      6. run the following cmd
      -> aws ec2 import-image --description "<migration>" --disk-containers "file://<path/to/containers.json>"   (it will create AMI from vmdk)
      -> aws ec2 describe-import-image-tasks --import-task-ids <ami-id>   (get ami-id from O/P of above task) - to monitor the progress.
      7. go to ec2 -->AMI --> find ur new image (import-ami-..)
      8. Now launch a new instance from this ami 
      9. SSH to ec2 with same creads that ur VM has

    # 2 - DB Migration (from private data center)
        - Go To DB migration service (DMS)
          - create replication instance (we can do on demand or scheduled)  -Create a role For DMS with admin or required access.
          - Create Endpoints (source abd target)
          - Create DB migration task (select if u want to migrate old data/ old+running data/ only new data)
