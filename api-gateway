* In simple terms API is an intermidiatory between two applications that allows them to communicate with each other.
eg. food delivery app- where via api it access maps.
    payment option in apps uses payment api.

* Types of APIs
  - Http - api for web server/browser, it can be public or private (private api requires access token)
  - REST (Representational State transfer) 
    - Rest api are http apis but not all http api are rest.
    - it is flexible, rest is not tied to methods and resources so can handle multiple types of call and handle different data formats.
  - Web Socket - allow to create web socket which is capable of bidirectional full duplex communication over persistent TCP connection (written in JS) - eg. chat apps,streaming dashoard.

* What is API gateway
- its like a API management tool that is a computer software that sits between client and collection of backend services. it is a single entry point for all backend apis/micro-services.
- If API is not consistant in delivering then its useless, hence API gateway is built to provide security and high availability. and does authentication and authorisation of user
- API gateways control access to APIs to protect them, reduce API abuse, and increase their value. Additionally, an API gateway add an insulation layer between providers and consumers of APIs. 
  At a high level, an API gateway: Authorizes and authenticates: Ensures secure access to APIs and who (authorize) can call APIs.
- eg. of API gateways - aws API gateway, redhat 3scale, apigee, mulesoft

* AWS API Gateway-
- its serverless aws service for creating, publishing, monitoring and maintaining REST, HTTP and websocket APIs.
- API devlopers can create apis that access AWS or other web service, as well as data stored in aws cloud.

* working of AWS API Gateway.
  1. there can be many API so API gateway take care of authentication and authorization.
  2. u may have to set limit(rate limiting, quotas) for api consumers, can do request throttling if there are too many requests.
  3. implement multiple versions of ur API.
  4. monitor API calls.
  5. cache ur API req. for improved performance.
  6. It can handle API versioning.
  7. handle diffrent environment (dev,test,prod...)
  8. AWS lambda + API gateway - no infra to manage 
  9. create API keys
  10. swagger can be integrated to define and export APIs
  11. Transform and validate request and response.
- for all this AWS API gateway works as abstract layer.

* 3 Ways to deploy API gateway called API gateway Endpoint Types
  1. Edge optimised (default) : for global clients - means API gateway is assessible from any where in the world, and req. will be routed through all edge location for high efficiency.(low latancy)
                                API gateway is still in one region but accessible from any where.
  2. Regional: for clients in same region as gateway.
               can be combined with cloudfront, will work as Edge optimised (more control over some cacheing and distribution settings)
  3. Private: can be accessed through vpc using VPC endpoint(ENI)

* Security in API gateway
 1. user authentication through
   - IAM roles (for internal app. running on EC2)
   - Coginto (for external user - like mobile user)
   - Custom Authorizer (your own logic - some lambda)
 2. Custom domain name HTTPS security through integration with AWS cretificate manager.
    - if using edge optimised, then cretificate must be in us-east-1
    - if regional then certificate and api gateway must be  in same region.
* developers uses existing microservice API's for development so they need API gateway

=======================================================================================
* How to create API gateway in aws
1. go to console -> create API(for second time)
2. Types - HTTP,WebSocket, Rest, Rest Private (select as per requirement)
3. Choose Method type- not for first time (all,get.put....) and choose way to deploy (edge loc., regional, Private) ---and create
4. go to API - for first time u will see / path(resource). create a method for it.
  choose "Create Method" (this first time will be for "/" root api) --> Choose with what u want to integrate (lambda, http, aws service, vpc link)
  - if lambda (create and deploy a lambda function and copy its arn here) - to integrate gateway and lambda and create.
  * root '/', /api1, /resource1 or child to any path are called as "Resource" and after creating resource we create method(get, put...) for it.
5. got to resources - and click on test. to check the result, logs.
   - we can create resources with particular path, by defalut its '/' root, but we can create diffrent resource with diffrent path '/resource1' etc.
   - and create method "get. put..." for that resource.
6.  deploy the api - give stage name(dev, prod..) -- now u will get a invoke URL -- u can use that in browser to get the responce

